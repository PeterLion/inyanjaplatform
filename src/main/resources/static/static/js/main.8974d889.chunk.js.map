{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8974d889.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\"\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/project\", project)\r\n        history.push(\"/dashboard\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        history.push(\"/dashboard\")\r\n    }\r\n}\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n    if (window.confirm(\"Are you sure you want to delete this project with its related tasks?\")) {\r\n        axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n}","//Project Types\r\nexport const GET_ERRORS = \"GET_ERRORS\"\r\nexport const GET_PROJECTS = \"GET_PROJECTS\"\r\nexport const GET_PROJECT = \"GET_PROJECT\"\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\"\r\n\r\n//Backlog Types\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\"\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\"\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\"\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\"\r\nimport { deleteProject } from \"../../actions/projectActions\"\r\n\r\nclass ProjectItem extends Component {\r\n    onDeleteClick = id => {\r\n        this.props.deleteProject(id)\r\n    }\r\n    render() {\r\n        const { project } = this.props\r\n        return (\r\n            < div className=\"container\" >\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{project.projectName}</h3>\r\n                            <p>{project.description}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item board\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                    </li>\r\n                                </Link>\r\n\r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, { deleteProject })(ProjectItem)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n                Create a Project\r\n              </Link>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from 'react'\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from \"react-redux\"\r\nimport { getProjects } from \"../actions/projectActions\"\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getProjects();\r\n    }\r\n    render() {\r\n        const { projects } = this.props.project\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">Projects</h1>\r\n                            <br />\r\n                            <CreateProjectButton />\r\n                            <br />\r\n                            <hr />\r\n\r\n                            {\r\n                                projects.map(project => (\r\n                                    <ProjectItem key={project.id} project={project} />\r\n                                ))\r\n\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\"\r\nimport jwt_decode from \"jwt-decode\"\r\nimport setJWTToken from \"../securityUtils/setJWTToken\"\r\n\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n        // post => Login Request\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n        // extract token from res.data\r\n        const { token } = res.data;\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        // set our token in header ***\r\n        setJWTToken(token);\r\n        // decode token on React\r\n        const decoded = jwt_decode(token);\r\n        // dispatch to our securityReducer\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    });\r\n};","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n    logout() {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n    }\r\n    render() {\r\n        const { validToken, user } = this.props.security;\r\n\r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n            </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            <i className=\"fa fa-user-circle mr-1\" />\r\n                            {user.fullName}\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            to=\"/logout\"\r\n                            onClick={this.logout.bind(this)}\r\n                        >\r\n                            Logout\r\n            </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        const userIsNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/register\">\r\n                            Sign Up\r\n            </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/login\">\r\n                            Login\r\n            </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        let headerLinks;\r\n\r\n        if (validToken && user) {\r\n            headerLinks = userIsAuthenticated;\r\n        } else {\r\n            headerLinks = userIsNotAuthenticated;\r\n        }\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Personal Project Management Tool\r\n                </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n\r\n                    {headerLinks}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\"\r\n\r\nclass AddProject extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    //life cycle hooks\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProject = {\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        };\r\n        this.props.createProject(newProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"project\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={classnames(\"form-control form-control-lg\", {\r\n                                                \"is-invalid\": errors.projectName\r\n                                            })}\r\n                                            placeholder=\"Project Name\"\r\n                                            name=\"projectName\"\r\n                                            value={this.state.projectName}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={classnames(\"form-control form-control-lg\", {\r\n                                                \"is-invalid\": errors.projectIdentifier\r\n                                            })}\r\n                                            placeholder=\"Unique Project ID\"\r\n                                            name=\"projectIdentifier\"\r\n                                            value={this.state.projectIdentifier}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.projectIdentifier && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea\r\n                                            className={classnames(\"form-control form-control-lg\", {\r\n                                                \"is-invalid\": errors.description\r\n                                            })}\r\n                                            placeholder=\"Project Description\"\r\n                                            name=\"description\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"start_date\"\r\n                                            value={this.state.start_date}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"end_date\"\r\n                                            value={this.state.end_date}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block mt-4\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { createProject }\r\n)(AddProject);","import { GET_ERRORS } from \"../actions/types\"\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            }\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            }\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\"\r\n\r\nconst initialState = { project_tasks: [], project_task: {} }\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            }\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            }\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(\r\n                    project_task => project_task.projectSequence !== action.payload\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    validToken: false,\r\n    user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n    if (payload) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\"\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\n\r\nlet store\r\n\r\nconst ReactReduxDevTools =\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware),\r\n        ReactReduxDevTools))\r\n} else {\r\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)))\r\n}\r\n\r\nexport default store","import React, { Component } from 'react'\r\nimport { getProject, createProject } from \"../../actions/projectActions\"\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n\r\nclass UpdateProject extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n        const { id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date } = nextProps.project\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history)\r\n    }\r\n    onChange(e) { this.setState({ [e.target.name]: e.target.value }) }\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        }\r\n        this.props.createProject(updateProject, this.props.history)\r\n    }\r\n    render() {\r\n        const { errors } = this.state\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={this.onChange} name=\"projectName\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.projectName\r\n                                    })} value={this.state.projectName} placeholder=\"Project Name\" />\r\n                                    {errors.projectName && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={this.onChange} name=\"projectIdentifier\" className=\"form-control form-control-lg\" value={this.state.projectIdentifier} placeholder=\"Unique Project ID\"\r\n                                        disabled />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <textarea className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.description\r\n                                    })} onChange={this.onChange} name=\"description\" value={this.state.description} placeholder=\"Project Description\"></textarea>\r\n                                    {errors.description && (\r\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                    )}\r\n                                </div>\r\n                                <h6>Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\" onChange={this.onChange} name=\"start_date\" value={this.state.start_date} />\r\n                                </div>\r\n                                <h6>Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\" onChange={this.onChange} name=\"end_date\" value={this.state.end_date} />\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n    onDeleteClick(backlog_id, pt_id) {\r\n        this.props.deleteProjectTask(backlog_id, pt_id);\r\n    }\r\n    render() {\r\n        const { project_task } = this.props;\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if (project_task.priority === 1) {\r\n            priorityClass = \"bg-danger text-light\";\r\n            priorityString = \"HIGH\";\r\n        }\r\n\r\n        if (project_task.priority === 2) {\r\n            priorityClass = \"bg-warning text-light\";\r\n            priorityString = \"MEDIUM\";\r\n        }\r\n\r\n        if (project_task.priority === 3) {\r\n            priorityClass = \"bg-info text-light\";\r\n            priorityString = \"LOW\";\r\n        }\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n                <div className={`card-header text-primary ${priorityClass}`}>\r\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {project_task.acceptanceCriteria}\r\n                    </p>\r\n                    <Link\r\n                        to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n                            project_task.projectSequence\r\n                            }`}\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        View / Update\r\n          </Link>\r\n\r\n                    <button\r\n                        className=\"btn btn-danger ml-4\"\r\n                        onClick={this.onDeleteClick.bind(\r\n                            this,\r\n                            project_task.projectIdentifier,\r\n                            project_task.projectSequence\r\n                        )}\r\n                    >\r\n                        Delete\r\n          </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n    null,\r\n    { deleteProjectTask }\r\n)(ProjectTask);","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\"\r\nexport const addProjectTask = (\r\n    backlog_id,\r\n    project_task,\r\n    history\r\n) => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjectTask = (\r\n    backlog_id,\r\n    pt_id,\r\n    history\r\n) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n    backlog_id,\r\n    pt_id,\r\n    project_task,\r\n    history\r\n) => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    if (\r\n        window.confirm(\r\n            `You are deleting project task ${pt_id}, this action cannot be undone`\r\n        )\r\n    ) {\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        });\r\n    }\r\n};","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n        const { project_tasks_prop } = this.props;\r\n\r\n        const tasks = project_tasks_prop.map(project_task => (\r\n            <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ));\r\n        let todoItems = [];\r\n        let inProgressItems = [];\r\n        let doneItems = [];\r\n\r\n        for (let i = 0; i < tasks.length; i++) {\r\n\r\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n                todoItems.push(tasks[i]);\r\n            }\r\n\r\n            if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n                inProgressItems.push(tasks[i]);\r\n            }\r\n\r\n            if (tasks[i].props.project_task.status === \"DONE\") {\r\n                doneItems.push(tasks[i]);\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TO DO</h3>\r\n                            </div>\r\n                        </div>\r\n                        {todoItems}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>\r\n                        </div>\r\n                        {inProgressItems}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>\r\n                        </div>\r\n                        {doneItems}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backlog;","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport Backlog from \"./Backlog\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            errors: {}\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getBacklog(id);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ errors: nextProps.errors })\r\n    }\r\n    render() {\r\n        const { id } = this.props.match.params\r\n        const { project_tasks } = this.props.backlog;\r\n        const { errors } = this.state;\r\n\r\n        let BoardContent;\r\n\r\n        const boardAlgorithm = (errors, project_tasks) => {\r\n            if (project_tasks.length < 1) {\r\n                if (errors.projectNotFound) {\r\n                    return (<div className=\"alert alert-danger text-center\" role=\"alert\">{errors.projectNotFound}</div>)\r\n                } else if (errors.projectIdentifier) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectIdentifier}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (<div className=\"alert alert-info text-center\" role=\"alert\">No Project Tasks found in this Board</div>)\r\n                }\r\n            } else {\r\n                return (<Backlog project_tasks_prop={project_tasks} />)\r\n            }\r\n        }\r\n\r\n        BoardContent = boardAlgorithm(errors, project_tasks)\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                    <i className=\"fa fa-plus-circle\"> Create Project Task</i>\r\n                </Link>\r\n                <br />\r\n                <hr />\r\n                {BoardContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { id } = this.props.match.params;\r\n\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    // on change\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    //on submit\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const newTask = {\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate\r\n        };\r\n        this.props.addProjectTask(\r\n            this.state.projectIdentifier,\r\n            newTask,\r\n            this.props.history\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n              </Link>\r\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.acceptanceCriteria\r\n                                        })}\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.acceptanceCriteria && (\r\n                                        <div className=\"invalid-feedback\">{errors.acceptanceCriteria}</div>\r\n                                    )}\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.dueDate\r\n                                        })}\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.dueDate && (\r\n                                        <div className=\"invalid-feedback\">{errors.dueDate}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.priority\r\n                                        })}\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                    {errors.priority && (\r\n                                        <div className=\"invalid-feedback\">{errors.priority}</div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.status\r\n                                        })}\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                    {errors.status && (\r\n                                        <div className=\"invalid-feedback\">{errors.status}</div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary btn-block mt-4\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addProjectTask }\r\n)(AddProjectTask);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            create_At: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        const { backlog_id, pt_id } = this.props.match.params;\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n        } = nextProps.project_task;\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n        });\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const UpdateProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            create_At: this.state.create_At\r\n        };\r\n\r\n        this.props.updateProjectTask(\r\n            this.state.projectIdentifier,\r\n            this.state.projectSequence,\r\n            UpdateProjectTask,\r\n            this.props.history\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link\r\n                                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                                className=\"btn btn-light\"\r\n                            >\r\n                                Back to Project Board\r\n              </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                            <p className=\"lead text-center\">\r\n                                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                                {this.state.projectSequence}{\" \"}\r\n                            </p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary btn-block mt-4\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start you own\r\n                        </p>\r\n                                <hr />\r\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                    Sign Up\r\n                        </Link>\r\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                        </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react'\r\nimport { createNewUser } from \"../../actions/securityActions\"\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: \"\",\r\n            fullName: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        const newUser = {\r\n            username: this.state.username,\r\n            fullName: this.state.fullName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        }\r\n        this.props.createNewUser(newUser, this.props.history)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    render() {\r\n        const { errors } = this.state\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.fullName\r\n                                    })} onChange={this.onChange} placeholder=\"Full name\" value={this.state.fullName} name=\"fullName\" />\r\n                                    {errors.fullName && (\r\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.username\r\n                                    })} onChange={this.onChange} placeholder=\"Email Address\" value={this.state.username} name=\"username\" />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.password\r\n                                    })} onChange={this.onChange} placeholder=\"Password\" value={this.state.password} name=\"password\" />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.confirmPassword\r\n                                    })} onChange={this.onChange} placeholder=\"Confirm Password\" value={this.state.confirmPassword}\r\n                                        name=\"confirmPassword\" />\r\n                                    {errors.confirmPassword && (\r\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const LoginRequest = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n\r\n        this.props.login(LoginRequest);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.username\r\n                                    })} placeholder=\"Email Address\" name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange} />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.password\r\n                                    })} placeholder=\"Password\" name=\"password\" value={this.state.password}\r\n                                        onChange={this.onChange} />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n    <Route\r\n        {...otherProps}\r\n        render={props =>\r\n            security.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\"\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\"\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    //handle logout\n    store.dispatch(logout());\n    //window.location.href = \"/\";\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n              <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n              <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n              <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}